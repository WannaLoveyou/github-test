<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:task="http://www.springframework.org/schema/task"  
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd
		 http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd"
		default-lazy-init="true">  
		
     <!-- 使用注解的包，包括子集 -->
    <context:component-scan base-package="com.tgb.task" />

 	<!-- 定时器开关--> 
     <task:annotation-driven />
     
    <context:annotation-config />
    <context:component-scan base-package="com.qian">
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>
    

  
    <context:property-placeholder location="classpath*:properties/*.properties"/>
    <!-- 配置数据源 --> 
    
     
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"    
        destroy-method="close"> 
        <property name="driverClass" value="${${project.name}.mysql.driverClass}"></property> 
        <property name="jdbcUrl" value="${${project.name}.mysql.jdbcUrl}"></property> 
        <property name="user" value="${${project.name}.mysql.user}"></property> 
        <property name="password" value="${${project.name}.mysql.password}"></property> 
        <property name="maxPoolSize" value="100"/>
        <property name="minPoolSize" value="1"/>
         <!-- 初始化建立的连接数 -->
        <property name="initialPoolSize" value="1"/>
        <!-- 最大空闲时间，120秒内未被使用的连接将被丢弃 -->
        <property name="maxIdleTime" value="1800"/>
        <!-- 当连接池耗尽，且未达到最大连接数时，一次获取的连接数 -->
        <property name="acquireIncrement" value="2"/>
         <!-- 防止MYSQL 8小时断开连接-->
        <property name="preferredTestQuery" value="SELECT 1"/>
		<property name="idleConnectionTestPeriod" value="18000"/>
		<property name="testConnectionOnCheckout" value="true"/>
    </bean> 
   
     
    <!-- 配置SessionFactory --> 
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> 
        <property name="dataSource" ref="dataSource" /> 
        <property name="hibernateProperties"> 
            <props> 
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> 
                <prop key="hibernate.hbm2ddl.auto">update</prop> 
                <prop key="hibernate.show_sql">false</prop> 
                <prop key="hibernate.format_sql">false</prop> 
            </props> 
           
        </property> 
         <property name="packagesToScan" value="com.qian" />
    </bean> 
     
    <!-- 配置一个事务管理器 --> 
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"> 
        <property name="sessionFactory" ref="sessionFactory"/> 
    </bean> 
    
     <!-- 配置模板 --> 
   <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
    <property name="sessionFactory" ref="sessionFactory"></property>
</bean>
    <!--打开注解事务-->
<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" /> 
    

</beans> 